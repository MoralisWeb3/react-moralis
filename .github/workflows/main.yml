name: CI
on:
  pull_request:
    branches:
      - main
      - beta
  push:
    branches:
      - main
      - beta
jobs:
  setup:
    name: Build dependencies
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Use cache dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}s
      - name: Install packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install:clean

  lint:
    name: Eslint
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
    needs: setup
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Use cache dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}s
      - name: ESLint
        run: yarn lint:ci
        continue-on-error: true
      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@1.2.0
        if: always()
        continue-on-error: true
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          report-json: "eslint_report.json"

  format:
    name: Prettier
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
    needs: setup
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Use cache dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}s
      - name: Prettier
        run: yarn format:check

  typecheck:
    name: Typescript
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
    needs: setup
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Use cache dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}s
      - name: Typecheck
        run: yarn tsc

  test:
    name: Tests
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
    needs: setup
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Use cache dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}s
      - name: Jest
        run: yarn test:ci

  publish:
    name: Publish
    if: |
      (github.ref == 'refs/heads/main'  || github.ref == 'refs/heads/beta')
        && !contains(github.event.commits[0].message, '[skip ci]')
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
    needs: [setup, lint, typecheck, test, format]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
          token: ${{ env.GH_TOKEN }}
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Use cache dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}s
      - run: npx semantic-release
